{"version":3,"sources":["database/index.js","domains/timer/solve.js","domains/timer/scramble.js","domains/timer/index.js","domains/routes/index.js","domains/create-store.js","ui/_styles/merge.js","ui/timer/_common/solve-time/format.js","ui/_styles/theme.js","ui/timer/_common/solve-time/styles.js","ui/timer/_common/solve-time/index.js","ui/timer/_common/solve-time/component.js","ui/timer/styles.js","ui/timer/solves/styles.js","ui/timer/solves/component.js","ui/timer/solves/index.js","ui/timer/solves/container.js","ui/timer/current-solve/styles.js","ui/timer/current-solve/cube/cube.js","ui/timer/current-solve/cube/index.js","ui/timer/current-solve/component.js","ui/timer/current-solve/index.js","ui/timer/current-solve/container.js","ui/timer/trend/styles.js","ui/timer/trend/component.js","ui/timer/trend/index.js","ui/timer/trend/container.js","ui/timer/index.js","ui/timer/component.js","ui/_common/link/component.js","ui/_common/link/index.js","ui/_common/link/container.js","ui/tutorial/index.js","ui/component.js","ui/index.js","ui/container.js","index.js"],"names":["Database","_this","this","name","arguments","length","undefined","Object","classCallCheck","requestSolves","db","solves","orderBy","reverse","toArray","createSolve","solve","add","deleteSolve","id","delete","then","Dexie","version","stores","Solve","get","set","scramble","timestamp","millis","json","fromJS","Record","start","inspectionTime","solveTime","List","tags","MOVES_2","F","B","U","D","L","R","MOVES_3","OPPOSING","_MOVES","STEPS","random","list","Math","floor","possibleMoves","m","filter","move","opposing","complexity","lastMove","moves","i","push","map","_ref","_ref2","slicedToArray","step","Error","simplify","_scramble","observables","build","status","Timer","_requestSolves","fromJson","action","requestNewScramble","requestNewSolve","requestStartInspecting","setStart","Date","now","tickInspection","setInspectionTime","requestStartSolving","requestStopSolving","tickSolve","setScramble","toJS","serialize","unshift","setId","setSolveTime","requestTickInspection","requestTickSolve","requestDeleteSolve","filterNot","getId","extendObservable","Routes","store","PATHS","/timer","showTimer","/tutorial","showTutorial","timer","currentRoute","changeRoute","route","getPath","currentPath","computed","path","window","location","pathname","fn","Store","routes","merge","base","extensions","_","style","padLeft","desiredLength","char","message","diff","slice","repeat","format","time","round","centiseconds","secondsRaw","seconds","minutes","toString","theme","MONOSPACE_FONT","styles","StyleSheet","create","fontFamily","Component","className","formattedTime","klass","css","react_default","a","createElement","solveStyles","fontSize","backgroundColor","container","flex","padding","primary","display","textAlign","height","secondary","position","top","right","currentSolve","flexDirection","justifyContent","deleteIcon","cursor","DisplaySolve","_Component","_getPrototypeOf2","_len","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","_this$props","props","inherits","createClass","key","value","getSolveTime","solve_time","onClick","role","aria-label","Solves","recent","component_DisplaySolve","Container","inject","observer","solves_component","rescramble","OrbitControls","OrbitControlsFactory","require","ease","BezierEasing","gray","red","orange","white","yellow","NINETY_DEGREES","PI","ONE_EIGHTY_DEGREES","buildCubeColor","_ref$right","_ref$left","left","_ref$up","up","_ref$down","down","_ref$front","front","_ref$back","back","filler","CUBE_COLORS","range","limit","increment","xs","LEFT_INDICES","RIGHT_INDICES","BACK_INDICES","FRONT_INDICES","UP_INDICES","DOWN_INDICES","Cube","width","_ref2$sides","sides","turn","pivot","Object3D","completedRotation","activeCubes","animateTurn","endsWith","startsWith","percent","rotation","z","y","x","activeGroup","cubes","turnStart","performance","forEach","active","SceneUtils","attach","scene","updateMatrixWorld","Promise","resolve","finishAnimatingTurn","remove","corners","edges","detach","cubeContainer","cycle","toConsumableArray","swap","j","k","l","b","c","d","animate","renderer","camera","elapsedTime","percentComplete","render","getDomElement","domElement","WebGLRenderer","setSize","PerspectiveCamera","lookAt","Vector3","pieces","offset","buildCubePositions","color","geometry","BoxGeometry","n","min","faces","face","faceColor","setHex","material","MeshBasicMaterial","vertexColors","FaceColors","mesh","Mesh","index","cubeColorsAt","colors","duplicateColors","cube","Scene","setTimeout","reduce","promise","RenderedCube","cacheEl","el","animationId","requestAnimationFrame","cancelAnimationFrame","appendChild","ref","SPACE","TICK_INTERVAL","Message","CurrentSolve","startInspecting","inspectionIntervalId","setInterval","startSolving","_this$props2","clearInterval","solveIntervalId","stopSolving","handleKeydown","e","code","handleKeyup","document","addEventListener","removeEventListener","_this$props3","onClickRefresh","join","component_Timer","component_Message","current_solve_cube","current_solve_component","trend","bottom","Trend","data","maxTime","max","body","clientWidth","dist","yDomain","xType","strokeWidth","tickSize","tickValues","trend_component","current_solve","timer_trend","timer_solves","Link","handleClick","event","target","to","defaultPrevented","button","metaKey","altKey","ctrlKey","shiftKey","isModifiedEvent","preventDefault","children","href","link_component","Tutorial","_common_link","App","ui_timer","tutorial","ui_component","useStrict","autorun","history","pushState","ReactDOM","mobx_react","ui","getElementById"],"mappings":"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","file":"static/js/main.1281e8b1.chunk.js","sourcesContent":["// @flow\nimport Dexie from 'dexie';\nimport type { Move } from '../domains/timer';\n\ntype Solve = {\n  id: number,\n  start: number,\n  inspectionTime: number,\n  solveTime: number,\n  scramble: Move[],\n  tags: string[],\n};\n\nclass Database {\n  db: Dexie;\n\n  constructor(name: string = 'cuber') {\n    this.db = new Dexie(name);\n    this.db.version(1).stores({\n      solves: '++id,start,solveTime',\n    });\n  }\n\n  requestSolves = (): Promise<Solve[]> => {\n    return this.db.solves\n      .orderBy('start')\n      .reverse()\n      .toArray();\n  }\n\n  createSolve = (solve: Solve): Promise<number> => {\n    return this.db.solves.add(solve);\n  }\n\n  deleteSolve = (id: number): Promise<number> => {\n    return this.db.solves.delete(id)\n      .then(() => {\n        return id;\n      });\n  }\n}\n\nexport default Database;\nexport type {\n  Solve\n};","// @flow\nimport { fromJS, Record, List } from 'immutable';\nimport type { Solve as SolveJson } from 'database';\nimport type { Move } from './scramble';\n\n// TODO: figure out how to add types to this\nclass Solve extends Record({\n  id: null,\n  start: null,\n  inspectionTime: null,\n  solveTime: null,\n  scramble: List(),\n  tags: List(),\n}) {\n  static fromJson(json: SolveJson): Solve {\n    return new Solve(fromJS(json));\n  }\n\n  static build(): Solve {\n    return new Solve();\n  }\n\n  getId(): ?number {\n    return this.get('id');\n  }\n\n  setId(id: number): Solve {\n    return this.set('id', id);\n  }\n\n  setScramble(scramble: List<Move>): Solve {\n    return this.set('scramble', scramble);\n  }\n\n  setStart(timestamp: number): Solve {\n    return this.set('start', timestamp);\n  }\n\n  setInspectionTime(millis: number): Solve {\n    return this.set('inspectionTime', millis);\n  }\n\n  getSolveTime(): ?number {\n    return this.get('solveTime');\n  }\n\n  setSolveTime(millis: number): Solve {\n    return this.set('solveTime', millis);\n  }\n}\n\nexport default Solve;","// @flow\n/**\n * TODO: do a random state scramble / figure out Kociemba algorithm.\n *\n * - https://www.speedsolving.com/forum/threads/wca-scramble-algorithm.12969/\n * - https://en.wikipedia.org/wiki/Optimal_solutions_for_Rubik%27s_Cube\n *\n * Current way:\n *\n * 1. generate initial pair of (F|B|U|D|L|R, 1|2|3)\n * 2. generate (desired length - 1) more such pairs but taking care not to\n *    * move opposing face\n *    * repeat same move\n */\ntype _Move =\n    'F'\n  | 'B'\n  | 'U'\n  | 'D'\n  | 'L'\n  | 'R';\n\ntype Step = 1 | 2 | 3;\n\ntype Move =\n    'F'\n  | 'B'\n  | 'U'\n  | 'D'\n  | 'L'\n  | 'R'\n  | 'F2'\n  | 'B2'\n  | 'U2'\n  | 'D2'\n  | 'L2'\n  | 'R2'\n  | \"F'\"\n  | \"B'\"\n  | \"U'\"\n  | \"D'\"\n  | \"L'\"\n  | \"R'\";\n\n// map of (_Move, 2) -> Move\nconst MOVES_2 = {\n  F: 'F2',\n  B: 'B2',\n  U: 'U2',\n  D: 'D2',\n  L: 'L2',\n  R: 'R2',\n};\n\n// map of (_Move, 3) -> Move\nconst MOVES_3 = {\n  F: \"F'\",\n  B: \"B'\",\n  U: \"U'\",\n  D: \"D'\",\n  L: \"L'\",\n  R: \"R'\",\n};\n\nfunction simplify(move: _Move, step: Step): Move {\n  switch (step) {\n    case 1:\n      return move;\n    case 2:\n      return MOVES_2[move];\n    case 3:\n      return MOVES_3[move];\n    default:\n      // should never reach here\n      throw new Error(\"invalid (move, step)\", move, step);\n  }\n}\n\n// map of opposing moves\nconst OPPOSING = {\n  'F': 'B',\n  'B': 'F',\n  'U': 'D',\n  'D': 'U',\n  'L': 'R',\n  'R': 'L',\n};\n\nfunction opposing(move: _Move): _Move {\n  return OPPOSING[move];\n}\n\n// each possible move\nconst _MOVES: _Move[] = ['F', 'B', 'U', 'D', 'L', 'R'];\n\n// each possible step\nconst STEPS: Step[] = [1,2,3];\n\nfunction random<T>(list: T[]): T {\n  const index = Math.floor(Math.random() * list.length);\n  return list[index];\n}\n\nfunction possibleMoves(m: _Move): _Move[]  {\n  return _MOVES.filter(move => (\n    move !== m &&\n    move !== opposing(m)\n  ));\n}\n\nfunction scramble(complexity: number = 25): Move[] {\n  if (complexity === 0) { return []; }\n\n  let lastMove = [random(_MOVES), random(STEPS)]\n  const moves = [lastMove];\n\n  for (let i=1; i<complexity; i++) {\n    lastMove = [random(possibleMoves(lastMove[0])), random(STEPS)]\n    moves.push(lastMove);\n  }\n\n  return moves.map(([move, step]) => simplify(move, step));\n}\n\nconst MOVES = [\n  'F',\n  'B',\n  'U',\n  'D',\n  'L',\n  'R',\n  'F2',\n  'B2',\n  'U2',\n  'D2',\n  'L2',\n  'R2',\n  \"F'\",\n  \"B'\",\n  \"U'\",\n  \"D'\",\n  \"L'\",\n  \"R'\",\n];\n\nexport default scramble;\nexport type {\n  Move\n};\nexport {\n  MOVES\n};","// @flow\nimport {\n  extendObservable,\n  action,\n} from 'mobx';\nimport { List } from 'immutable';\n// eslint-disable-next-line no-unused-vars\nimport type Database, { Solve as SolveJson } from 'database';\nimport Solve from './solve';\nimport type { Move } from './scramble';\nimport _scramble from './scramble';\n\ntype Status = 'idle' | 'inspecting' | 'solving';\n\nfunction scramble(): List<Move> {\n  return List(_scramble());\n}\n\nfunction serialize(solve: Solve): any {\n  const json = solve.toJS();\n  delete json.id;\n  return json;\n}\n\nconst observables = {\n  solves: List(),\n  scramble: scramble(),\n  solve: Solve.build(),\n  status: 'idle',\n};\n\nclass Timer {\n  db: Database;\n\n  // previous solves\n  solves: List<Solve>;\n\n  // the current solve\n  solve: Solve;\n\n  // the current scramble\n  scramble: List<Move>;\n\n  // are we solving the current solve?\n  status: Status;\n\n  constructor(db: Database) {\n    this.db = db;\n    extendObservable(this, observables);\n  }\n\n  _requestSolves = (): Promise<List<Solve>> => {\n    return this.db.requestSolves()\n      .then((solves) => {\n        return List(solves).map((json) =>\n          Solve.fromJson(json)\n        );\n      });\n  }\n\n  requestSolves = action('request-solves', (): Promise<List<Solve>> => {\n    return this._requestSolves()\n      .then(action((solves) => {\n        this.solves = solves;\n        return solves;\n      }));\n  });\n\n  requestNewScramble = action('request-new-scramble', () => {\n    this.scramble = scramble();\n  });\n\n  requestNewSolve = action('request-new-solve', () => {\n    this.solve = Solve.build();\n  });\n\n  requestStartInspecting = action('request-start-inspecting', () => {\n    this.solve = this.solve.setStart(Date.now());\n    this.status = 'inspecting';\n  });\n\n  tickInspection = () => {\n    return this.solve.setInspectionTime(\n      Date.now() - this.solve.start\n    );\n  }\n\n  requestStartSolving = action('request-start-solving', () => {\n    this.solve = this.tickInspection();\n    this.status = 'solving';\n  });\n\n  requestStopSolving = action('request-stop-solving', () => {\n    this.solve = this\n      .tickSolve()\n      .setScramble(this.scramble);\n\n    this.db.createSolve(serialize(this.solve))\n      .then(action((id) => {\n        this.solves = this.solves.unshift(\n          this.solve.setId(id)\n        );\n        this.scramble = scramble();\n        this.status = 'idle';\n      }));\n  });\n\n  /**\n   * @private\n   */\n  tickSolve = () => {\n    return this.solve.setSolveTime(\n      Date.now() - (\n        this.solve.start +\n        this.solve.inspectionTime\n      )\n    );\n  };\n\n  requestTickInspection = action('request-tick-inspection', () => {\n    this.solve = this.tickInspection();\n  });\n\n  requestTickSolve = action('request-tick-solve', () => {\n    this.solve = this.tickSolve();\n  });\n\n  requestDeleteSolve = action('request-delete-solve', (id: ?number) => {\n    if (!id) { return; }\n\n    this.db.deleteSolve(id);\n    this.solves = this.solves.filterNot((solve) => {\n      return solve.getId() === id;\n    });\n  });\n}\n\nexport default Timer;\nexport type {\n  Status,\n  Move,\n};","// @flow\nimport {\n  extendObservable,\n  action,\n  computed,\n} from 'mobx';\nimport { Store } from '../create-store';\n\nexport type Route =\n    'timer'\n  | 'tutorial';\n\nclass Routes {\n  store: Store;\n  currentRoute: ?Route;\n  currentPath: any;\n\n  // keep in sync with changeRoute and getPath\n  PATHS = {\n    '/timer': () => this.showTimer(),\n    '/tutorial': () => this.showTutorial(),\n  };\n\n  constructor(store: Store) {\n    this.store = store;\n    extendObservable(this, {\n      // the route name\n      currentRoute: null,\n\n      // corresponding window.location.pathname\n      currentPath: computed(() => (\n        this.getPath(this.currentRoute)\n      )),\n    });\n\n    const path = window.location.pathname;\n    const fn = this.PATHS[path];\n    if (fn) {\n      fn()\n    } else {\n      this.changeRoute('timer');\n    }\n  }\n\n  showTimer = action('show-timer', () => {\n    this.store.timer.requestSolves();\n    this.currentRoute = 'timer';\n  });\n\n  showTutorial = action('show-tutorial', () => {\n    this.currentRoute = 'tutorial';\n  });\n\n  // keep in sync with PATHS and getPath\n  changeRoute = (route: Route) => {\n    switch (route) {\n      case 'timer':\n        return this.showTimer();\n      case 'tutorial':\n        return this.showTutorial();\n      default:\n        break;\n    }\n  }\n\n  // keep in sync with PATHS and changeRoute\n  getPath = (route: ?Route): string => {\n    switch (route) {\n      case 'timer':\n        return '/timer';\n      case 'tutorial':\n        return '/tutorial';\n      default:\n        return '';\n    }\n  }\n}\n\nexport default Routes;","// @flow\nimport type Database from '../database';\nimport Timer from './timer';\nimport Routes from './routes';\n\nclass Store {\n  timer: Timer;\n  routes: Routes;\n\n  constructor(db: Database) {\n    this.timer = new Timer(db);\n    this.routes = new Routes(this);\n  }\n}\n\nexport default (db: Database) => new Store(db);\nexport { Store };","// @flow\nimport _ from 'lodash';\n\nconst merge = (base: StyleSheetProp, extensions: any): any => (\n  _.merge({}, base.style, extensions)\n);\n\nexport default merge;","// @flow\n\nconst padLeft = (\n  desiredLength: number,\n  char: string,\n  message: string\n): string => {\n  if (message.length >= desiredLength) { return message; }\n\n  const diff = desiredLength - message.length;\n  return char.slice(0, 1).repeat(diff) + message;\n}\n\nconst format = (millis: number): string => {\n  const time = Math.round(millis);\n  const centiseconds = (time % 1000);\n  const secondsRaw = Math.floor(time / 1000);\n  const seconds = secondsRaw % 60;\n  const minutes = Math.floor(secondsRaw / 60);\n\n  return (\n    padLeft(2, '0', minutes.toString()) + ':' +\n    padLeft(2, '0', seconds.toString()) + '.' +\n    padLeft(3, '0', centiseconds.toString())\n  );\n};\n\nexport default format;\nexport {\n  padLeft\n};","// @flow\n\nconst theme = {\n  MONOSPACE_FONT: 'Roboto Mono, monospace',\n};\n\nexport default theme;","// @flow\nimport { StyleSheet } from 'aphrodite';\nimport theme from '../../../../ui/_styles/theme';\n\nconst styles: {\n  time: StyleSheetProp,\n} = StyleSheet.create({\n  time: {\n    fontFamily: theme.MONOSPACE_FONT,\n  },\n});\n\nexport default styles;\n","// @flow\nimport Component from './component';\nimport format from './format';\nimport styles from './styles';\n\nexport default Component;\nexport {\n  format,\n  styles,\n};","// @flow\n\nimport React from 'react';\nimport { css } from 'aphrodite';\nimport format from './format';\nimport styles from './styles';\n\nconst SolveTime = ({\n  className,\n  time,\n}: {\n  className?: string,\n  time: ?number,\n}) => {\n  const formattedTime = time ? format(time) : \"--:--.---\"\n  const klass = className || css(styles.time);\n\n  return (\n    <div className={klass}>\n      {formattedTime}\n    </div>\n  )\n}\n\nexport default SolveTime\n","// @flow\n\nimport { StyleSheet } from 'aphrodite';\nimport merge from '../_styles/merge';\nimport { styles as solveStyles } from './_common/solve-time';\n\nconst container = {\n  flex: '1',\n  padding: '20px',\n  backgroundColor: 'salmon'\n};\n\nconst primary = {\n  display: 'flex',\n  backgroundColor: 'pink',\n  textAlign: 'center',\n  height: '100%',\n};\n\nconst secondary = {\n  position: 'fixed',\n  top: '20px',\n  right: '20px',\n};\n\nconst currentSolve = {\n  display: 'flex',\n  flex: '2',\n  flexDirection: 'column',\n  justifyContent: 'space-between',\n  backgroundColor: 'cornsilk',\n}\n\nconst scramble = {\n  backgroundColor: 'grey'\n}\n\nconst solveTime = merge(solveStyles.time, {\n  fontSize: '72px',\n  backgroundColor: 'magenta',\n});\n\n\nconst styles: {\n  container: StyleSheetProp,\n  primary: StyleSheetProp,\n  secondary: StyleSheetProp,\n  currentSolve: StyleSheetProp,\n  scramble: StyleSheetProp,\n  solveTime: StyleSheetProp,\n} = StyleSheet.create({\n  container,\n  primary,\n  secondary,\n  currentSolve,\n  scramble,\n  solveTime,\n});\n\nexport default styles;\n","// @flow\nimport { StyleSheet } from 'aphrodite';\nimport merge from '../../../ui/_styles/merge';\nimport { styles as solveStyles } from '../_common/solve-time';\n\nconst solveTime = merge(solveStyles.time, {\n  display: 'inline',\n});\n\nconst deleteIcon = {\n  cursor: 'pointer',\n}\n\nconst styles: {\n  solveTime: StyleSheetProp,\n  deleteIcon: StyleSheetProp,\n} = StyleSheet.create({\n  solveTime,\n  deleteIcon,\n});\n\nexport default styles;\n","// @flow\nimport React, { Component } from 'react';\nimport { css } from 'aphrodite';\nimport type { List } from 'immutable';\nimport Solve from '../../../domains/timer/solve';\nimport SolveTime from '../_common/solve-time';\nimport styles from './styles';\n\nconst DisplaySolve = class extends Component {\n  props: {\n    solve: Solve,\n    deleteSolve: () => void,\n  };\n\n  deleteSolve = () => {\n    const { solve, deleteSolve } = this.props;\n    const id = solve.getId();\n    deleteSolve(id);\n  };\n\n  render() {\n    const { solve } = this.props;\n    const solveTime = solve.getSolveTime();\n    return (\n      <div>\n        <SolveTime\n          className={css(styles.solveTime)}\n          time={solveTime}\n        />\n        <span\n          className={css(styles.deleteIcon)}\n          onClick={this.deleteSolve}\n        >\n          &nbsp;<span role=\"img\" aria-label=\"remove\">❌</span>\n        </span>\n      </div>\n    )\n  }\n}\n\nconst Solves = ({\n  solves,\n  deleteSolve,\n}: {\n  solves: List<Solve>,\n  deleteSolve: () => void,\n}) => {\n  const recent = solves.slice(0, 12).map((solve) => (\n    <li key={solve.id}>\n      <DisplaySolve\n        solve={solve}\n        deleteSolve={deleteSolve}\n      />\n    </li>\n  ));\n\n  return (\n    <ul>\n      {recent}\n    </ul>\n  )\n}\n\nexport default Solves;\n","// @flow\nimport Container from './container';\n\nexport default Container;","// @flow\nimport React from 'react';\nimport { inject, observer } from 'mobx-react';\nimport Component from './component';\nimport { Store } from '../../../domains/create-store';\n\nconst Solves = ({ store }: {\n  store: Store\n}) => {\n  const solves = store.timer.solves;\n  const deleteSolve = store.timer.requestDeleteSolve;\n  return (\n    <Component\n      solves={solves}\n      deleteSolve={deleteSolve}\n    />\n  );\n};\n\nexport default inject('store')(observer(Solves));\n\n","// @flow\n\nimport { StyleSheet } from 'aphrodite';\nimport merge from '../../../ui/_styles/merge';\nimport { styles as solveStyles } from '../_common/solve-time';\n\nconst currentSolve = {\n  display: 'flex',\n  flex: '2',\n  flexDirection: 'column',\n  justifyContent: 'space-between',\n  backgroundColor: 'cornsilk',\n}\n\nconst scramble = {\n  backgroundColor: 'grey'\n}\n\nconst timer = merge(solveStyles.time, {\n  fontSize: '72px',\n  backgroundColor: 'magenta',\n});\n\nconst rescramble = {\n  cursor: 'pointer',\n};\n\nconst styles: {\n  currentSolve: StyleSheetProp,\n  scramble: StyleSheetProp,\n  timer: StyleSheetProp,\n  rescramble: StyleSheetProp,\n} = StyleSheet.create({\n  currentSolve,\n  scramble,\n  timer,\n  rescramble,\n});\n\nexport default styles;\n","// @flow\nimport {\n  WebGLRenderer,\n  Scene,\n  PerspectiveCamera,\n  Mesh,\n  BoxGeometry,\n  MeshBasicMaterial,\n  FaceColors,\n  Object3D,\n  Vector3,\n  SceneUtils,\n} from 'three';\n\nimport OrbitControlsFactory from 'three-orbit-controls';\n\nimport BezierEasing from 'bezier-easing';\n\nimport type { Move } from 'domains/timer';\n\n// HACK: kinda sad, but `import THREE, { ... } from 'three';`\n// didn't work for me -- THREE was undefined.\nconst OrbitControls = OrbitControlsFactory(require('three'));\n\n\nconst ease = BezierEasing(0.25, 0.1, 0.25, 1) // ease function\n\nconst delay = (millis: number) => {\n  return new Promise((resolve) => {\n    setTimeout(() => resolve(), millis);\n  });\n};\n\n/**\n * returns positions for each piece in a cube\n */\nconst buildCubePositions = (sides: number): Vector3[] => {\n  const pieces = [];\n\n  /**\n   * with even number of pieces, the middle piece\n   * should start at -0.5.\n   *\n   * with odd numbe rof pieces, the middle piece\n   * should start at 0.\n   */\n  const offset = sides % 2 === 0 ?\n    (sides / 2) - 0.5 :\n    Math.floor(sides / 2);\n\n  for (let i=0; i<sides; i++) {\n    for (let j=0; j<sides; j++) {\n      for (let k=0; k<sides; k++) {\n        pieces.push(\n          new Vector3(\n            i - offset,\n            j - offset,\n            k - offset\n          )\n        );\n      }\n    }\n  }\n\n  return pieces;\n}\n\nconst gray = 0x999999;\nconst red = 0xff0000;\nconst orange = 0xff8000;\nconst white = 0xffffff;\nconst yellow = 0xffff00;\nconst green = 0x00ff00;\nconst blue = 0x0000ff;\n\nconst TURN_DURATION = 500;\nconst NINETY_DEGREES = Math.PI / 2;\nconst ONE_EIGHTY_DEGREES = Math.PI;\nconst INCREMENT = 1 / (30 * Math.PI);\n\ntype CubeColor = number[];\n\nconst buildCubeColor = ({\n  right = gray,\n  left = gray,\n  up = gray,\n  down = gray,\n  front = gray,\n  back = gray,\n}: {\n  right?: number,\n  left?: number,\n  up?: number,\n  down?: number,\n  front?: number,\n  back?: number,\n} = {}): CubeColor => {\n  return [\n    right,\n    right,\n\n    left,\n    left,\n\n    up,\n    up,\n\n    down,\n    down,\n\n    front,\n    front,\n\n    back,\n    back,\n  ]\n};\n\nconst filler = buildCubeColor();\n\n// standard cube, white up, green facing\nconst CUBE_COLORS = [\n  // far bottom left corner\n  buildCubeColor({\n    down: yellow,\n    left: orange,\n    back: blue,\n  }),\n\n  // middle bottom left edge\n  buildCubeColor({\n    down: yellow,\n    left: orange,\n  }),\n\n  // near bottom left corner\n  buildCubeColor({\n    down: yellow,\n    left: orange,\n    front: green,\n  }),\n\n  // far middle left edge\n  buildCubeColor({\n    left: orange,\n    back: blue,\n  }),\n\n  // left center\n  buildCubeColor({\n    left: orange,\n  }),\n\n  // near middle left edge\n  buildCubeColor({\n    left: orange,\n    front: green,\n  }),\n\n  // far top left corner\n  buildCubeColor({\n    up: white,\n    left: orange,\n    back: blue,\n  }),\n\n  // middle top left edge\n  buildCubeColor({\n    up: white,\n    left: orange,\n  }),\n\n  // near top left corner\n  buildCubeColor({\n    up: white,\n    left: orange,\n    front: green,\n  }),\n\n  // far bottom edge\n  buildCubeColor({\n    down: yellow,\n    back: blue,\n  }),\n\n  // bottom middle center\n  buildCubeColor({\n    down: yellow,\n  }),\n\n  // near bottom edge\n  buildCubeColor({\n    down: yellow,\n    front: green,\n  }),\n\n  // far center\n  buildCubeColor({\n    back: blue,\n  }),\n\n  // core\n  filler,\n\n  // near center\n  buildCubeColor({\n    front: green\n  }),\n\n  // far top edge\n  buildCubeColor({\n    up: white,\n    back: blue,\n  }),\n\n  // top center\n  buildCubeColor({\n    up: white,\n  }),\n\n  // near top edge\n  buildCubeColor({\n    up: white,\n    front: green,\n  }),\n\n  // far bottom right corner\n  buildCubeColor({\n    down: yellow,\n    right: red,\n    back: blue,\n  }),\n\n  // bottom right edge\n  buildCubeColor({\n    down: yellow,\n    right: red,\n  }),\n\n  // near bottom right corner\n  buildCubeColor({\n    down: yellow,\n    right: red,\n    front: green,\n  }),\n\n  // far right edge\n  buildCubeColor({\n    right: red,\n    back: blue,\n  }),\n\n  // right center\n  buildCubeColor({\n    right: red,\n  }),\n\n  // near right edge\n  buildCubeColor({\n    right: red,\n    front: green,\n  }),\n\n  // far top right corner\n  buildCubeColor({\n    up: white,\n    right: red,\n    back: blue,\n  }),\n\n  // top right edge\n  buildCubeColor({\n    up: white,\n    right: red,\n  }),\n\n  // near top right corner\n  buildCubeColor({\n    up: white,\n    right: red,\n    front: green,\n  }),\n];\n\nconst duplicateColors = (colors: CubeColor[]): CubeColor[] => {\n  return colors.map(color => color.slice(0));\n};\n\nconst front = (colors: CubeColor[]): CubeColor[] => {\n  return duplicateColors(colors);\n}\n\nconst cubeColorsAt = (index: number, colors: CubeColor[] = CUBE_COLORS): CubeColor => {\n  return colors[index] || filler;\n}\n\nconst buildColors = () => buildCubeColor({\n  up: white,\n  down: yellow,\n  left: orange,\n  right: red,\n  front: green,\n  back: blue,\n});\n\nconst buildBox = (position: Vector3, color: CubeColor): Mesh => {\n  const geometry = new BoxGeometry(1,1,1);\n\n  const n = Math.min(color.length, geometry.faces.length);\n  for (let i=0; i<n; i++) {\n    const face = geometry.faces[i];\n    const faceColor = color[i];\n\n    face.color.setHex(faceColor);\n  }\n\n  const material = new MeshBasicMaterial({\n    color: 0xffffff,\n    vertexColors: FaceColors,\n  });\n\n  const mesh = new Mesh(geometry, material);\n  mesh.position.x = position.x;\n  mesh.position.y = position.y;\n  mesh.position.z = position.z;\n  return mesh;\n}\n\n/**\n * returns [start, end) in increments of increment\n *\n * start must be less than end; increment must be greater than 0\n */\nconst range = (start: number, limit: number, increment: number = 1): number[] => {\n  const xs = [];\n  for (let i=start; i < limit; i += increment) {\n    xs.push(i);\n  }\n\n  return xs;\n}\n\nconst LEFT_INDICES = range(0, 9);\nconst RIGHT_INDICES = range(18,27);\nconst BACK_INDICES = range(0, 27, 3);\nconst FRONT_INDICES = range(2, 27, 3);\nconst UP_INDICES = range(6,9).concat(range(15, 18)).concat(range(24,27));\nconst DOWN_INDICES = range(0, 3).concat(range(9, 12)).concat(range(18, 21));\n\nclass Cube {\n  width: number;\n  height: number;\n  renderer: WebGLRenderer;\n  scene: Scene;\n  camera: PerspectiveCamera;\n  // parent cube that holds children cubes\n  cubeContainer: Object3D;\n  cubes: Object3D[];\n  turnStart: ?number;\n  pivot: Object3D;\n  animateTurn: (percent: number) => void;\n  finishAnimatingTurn: () => void;\n\n  /**\n   * width in pixels\n   * height in pixels\n   */\n  constructor({\n    width,\n    height,\n    sides = 3,\n  }: {\n    width: number,\n    height: number,\n    sides: number,\n  }) {\n    this.width = width;\n    this.height = height;\n    this.renderer = new WebGLRenderer();\n    this.renderer.setSize(width, height);\n\n    this.camera = new PerspectiveCamera(75, width / height, 0.1, 1000);\n    this.camera.position.z = 6;\n    this.camera.position.y = 3;\n    this.camera.position.x = 3;\n    this.camera.lookAt(new Vector3(0,0,0));\n    new OrbitControls(this.camera, this.renderer.domElement);\n\n    this.cubeContainer = new Object3D();\n    this.cubes = buildCubePositions(sides).map((position, i) =>\n      // TODO: don't remember the meaning behind name `front`...\n      // why not just do `cubeColorsAt(i)`?\n      buildBox(position, cubeColorsAt(i, front(CUBE_COLORS)))\n    );\n\n    this.cubes.forEach((cube) => {\n      this.cubeContainer.add(cube)\n    });\n\n    this.scene = new Scene();\n    this.scene.add(this.cubeContainer);\n\n    // rotation stuff, see\n    // https://github.com/jwhitfieldseed/rubik-js/blob/master/rubik.js#L261\n    this.pivot = new Object3D();\n    this.animateTurn = () => {};\n    this.finishAnimatingTurn = () => {};\n\n    setTimeout(() => {\n      [\n        \"B2\", \"D'\", \"L\", \"B'\", \"D\", \"R'\", \"B\", \"D2\", \"R'\", \"B'\", \"L'\", \"U'\",\n        \"F'\", \"R'\", \"U2\", \"B\", \"L2\", \"B2\", \"L'\", \"U'\", \"F2\", \"U2\", \"B'\", \"U2\", \"F'\"\n      ].reduce((promise, move) => {\n        return promise\n          .then(() => this.turn(move))\n          .then(() => delay(250));\n      }, Promise.resolve());\n    }, 1000);\n  }\n\n  turn = (move: Move): Promise<void> => {\n    this.pivot = new Object3D();\n    let activeCubes = [];\n    let animateTurn = () => {};\n    let completedRotation;\n\n    // is this one turn, two turns, or three turns\n    if (move.endsWith(\"'\")) {\n      // three turns\n      completedRotation = -NINETY_DEGREES;\n    } else if (move.endsWith(\"2\")) {\n      // two turns\n      completedRotation = ONE_EIGHTY_DEGREES;\n    } else {\n      // one turn\n      completedRotation = NINETY_DEGREES;\n    }\n\n    if (move.startsWith('F')) {\n      activeCubes = FRONT_INDICES;\n      animateTurn = (percent: number): void => {\n        this.pivot.rotation.z = -completedRotation * percent;\n      }\n    } else if (move.startsWith('B')) {\n      activeCubes = BACK_INDICES;\n      animateTurn = (percent: number): void => {\n        this.pivot.rotation.z = completedRotation * percent;\n      }\n    } else if (move.startsWith('U')) {\n      activeCubes = UP_INDICES;\n      animateTurn = (percent: number): void => {\n        this.pivot.rotation.y = -completedRotation * percent;\n      }\n    } else if (move.startsWith('D')) {\n      activeCubes = DOWN_INDICES;\n      animateTurn = (percent: number): void => {\n        this.pivot.rotation.y = completedRotation * percent;\n      }\n    } else if (move.startsWith('L')) {\n      activeCubes = LEFT_INDICES;\n      animateTurn = (percent: number): void => {\n        this.pivot.rotation.x = completedRotation * percent;\n      }\n    } else if (move.startsWith('R')) {\n      activeCubes = RIGHT_INDICES;\n      animateTurn = (percent: number): void => {\n        this.pivot.rotation.x = -completedRotation * percent;\n      }\n    } else {\n      throw new Error(`Unsupported move: ${move}`);\n    }\n\n    const activeGroup = activeCubes.map((i) =>\n      this.cubes[i]\n    );\n\n    this.animateTurn = animateTurn;\n    this.turnStart = performance.now();\n\n    activeGroup.forEach((active) => {\n      SceneUtils.attach(active, this.scene, this.pivot);\n    });\n\n    this.pivot.rotation.set(0,0,0);\n    this.pivot.updateMatrixWorld();\n    this.scene.add(this.pivot);\n\n    return new Promise((resolve) => {\n      this.finishAnimatingTurn = resolve;\n    }).then(() => {\n      this.pivot.updateMatrixWorld();\n      this.scene.remove(this.pivot);\n      this.turnStart = null;\n      activeGroup.forEach((active) => {\n        active.updateMatrixWorld();\n        SceneUtils.detach(active, this.pivot, this.scene);\n        this.cubeContainer.add(active);\n\n        let corners;\n        let edges;\n        // reorder cube with the updated position\n        if (move.startsWith('F')) {\n          corners = [2,8,26,20];\n          edges = [5,17,23,11];\n        } else if (move.startsWith('B')) {\n          corners = [0,18,24,6];\n          edges = [3,9,21,15];\n        } else if (move.startsWith('U')) {\n          corners = [6,24,26,8];\n          edges = [7,15,25,17];\n        } else if (move.startsWith('D')) {\n          corners = [0,2,20,18];\n          edges = [1,11,19,9];\n        } else if (move.startsWith('L')) {\n          corners = [0,6,8,2];\n          edges = [1,3,7,5];\n        } else if (move.startsWith('R')) {\n          corners = [18,20,26,24];\n          edges = [19,23,25,21];\n        } else {\n          throw new Error(`Unsupported move: ${move}`);\n        }\n\n        if (move.endsWith(\"'\")) {\n          this.cycle(...corners.slice().reverse());\n          this.cycle(...edges.slice().reverse());\n        } else if (move.endsWith('2')) {\n          this.swap(corners[0], corners[2]);\n          this.swap(corners[1], corners[3]);\n          this.swap(edges[0], edges[2]);\n          this.swap(edges[1], edges[3]);\n        } else {\n          this.cycle(...corners);\n          this.cycle(...edges);\n        }\n      });\n    })\n  }\n\n  /**\n   * cycle cubes after a 90 degree turn.\n   *\n   * a -> b\n   * b -> c\n   * c -> d\n   * d -> a\n   */\n  cycle = (i: number, j: number, k: number, l: number): void => {\n    const cubes = this.cubes;\n    const a = cubes[i];\n    const b = cubes[j];\n    const c = cubes[k];\n    const d = cubes[l];\n\n    cubes[j] = a;\n    cubes[k] = b;\n    cubes[l] = c;\n    cubes[i] = d;\n  }\n\n  /**\n   * swap cubes after an 180 degree turn.\n   *\n   * a -> b\n   * b -> c\n   */\n  swap = (i: number, j: number): void => {\n    const cubes = this.cubes;\n    const a = cubes[i];\n    const b = cubes[j];\n\n    cubes[i] = b;\n    cubes[j] = a;\n  }\n\n\n  animate = (time: number) => {\n    const {\n      renderer,\n      scene,\n      camera,\n      // cube,\n    } = this;\n\n\n    if (this.turnStart) {\n      const elapsedTime = time - this.turnStart;\n      const percentComplete = ease(elapsedTime / TURN_DURATION);\n      this.animateTurn(percentComplete);\n\n      if (elapsedTime >= TURN_DURATION) {\n        this.finishAnimatingTurn();\n      }\n    }\n\n    // cube.rotation.x += 0.01;\n    // cube.rotation.y += 0.01;\n    renderer.render(scene, camera);\n  }\n\n  getDomElement = () => (\n    this.renderer.domElement\n  );\n}\n\nexport default Cube;","// @flow\nimport React, { Component } from 'react';\nimport RenderedCube from './cube';\n\nconst Cube = class extends Component {\n  cube: RenderedCube = new RenderedCube({\n    width: 400,\n    height: 400,\n    sides: 3,\n  });\n  el: ?Node\n  animationId: ?number\n\n  cacheEl = (el: Node) => {\n    this.el = el;\n  }\n\n  componentWillUnmount() {\n    if (this.animationId) {\n      window.cancelAnimationFrame(this.animationId);\n    }\n  }\n\n  animate = (time: number) => {\n    this.cube.animate(time);\n    this.animationId = window.requestAnimationFrame(this.animate);\n  }\n\n  componentDidMount() {\n    const {\n      el,\n      cube,\n    } = this;\n    if (!el) { return; }\n\n\n    el.appendChild(cube.getDomElement());\n    this.animate(performance.now());\n  }\n\n  render() {\n    return (\n      <div\n        ref={this.cacheEl}\n      />\n    );\n  }\n};\n\nexport default Cube;","// @flow\nimport React, { Component } from 'react';\nimport { List } from 'immutable';\nimport { css } from 'aphrodite';\nimport type { Status, Move } from '../../../domains/timer';\nimport Solve from '../../../domains/timer/solve';\nimport SolveTime from '../_common/solve-time';\nimport styles from './styles';\nimport Cube from './cube';\n\ntype Props = {\n  solve: Solve,\n  scramble: List<Move>,\n  status: Status,\n  onClickRefresh: () => void,\n  startInspecting: () => void,\n  startSolving: () => void,\n  stopSolving: () => void,\n  tickInspection: () => void,\n  tickSolve: () => void,\n};\n\n// space button code\nconst SPACE = 'Space';\n\n// how often we update timer\nconst TICK_INTERVAL = 1;\n\nconst Timer = ({\n  solve,\n  status,\n}: {\n  solve: Solve,\n  status: Status,\n}) => {\n  const time = status === 'inspecting' ?\n    solve.inspectionTime :\n    solve.solveTime;\n  return (\n    <SolveTime\n      className={css(styles.timer)}\n      time={time}\n    />\n  );\n};\n\nconst Message = ({ status }: {\n  status: Status,\n}) => {\n  if (status === 'idle') {\n    return (\n      <div>Press and hold space to start inspecting</div>\n    );\n  } else if (status === 'inspecting') {\n    return (\n      <div>Release space when finished inspecting</div>\n    );\n  } else {\n    return (\n      <div>Press space when finished solving</div>\n    );\n  }\n};\n\nclass CurrentSolve extends Component {\n  props: Props;\n  inspectionIntervalId: ?number;\n  solveIntervalId: ?number;\n\n  componentWillMount() {\n    document.addEventListener('keydown', this.handleKeydown);\n    document.addEventListener('keyup', this.handleKeyup);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('keydown', this.handleKeydown);\n    document.removeEventListener('keyup', this.handleKeyup);\n  }\n\n  startInspecting = () => {\n    const {\n      startInspecting,\n      tickInspection,\n    } = this.props;\n    startInspecting();\n    this.inspectionIntervalId = setInterval(tickInspection, TICK_INTERVAL);\n  }\n\n  startSolving = () => {\n    const {\n      startSolving,\n      tickSolve,\n    } = this.props;\n    if (this.inspectionIntervalId) {\n      clearInterval(this.inspectionIntervalId);\n    }\n    startSolving();\n    this.solveIntervalId = setInterval(tickSolve, TICK_INTERVAL);\n  }\n\n  stopSolving = () => {\n    const {\n      stopSolving,\n    } = this.props;\n    if (this.solveIntervalId) {\n      clearInterval(this.solveIntervalId);\n    }\n    stopSolving();\n  }\n\n  handleKeydown = (e: KeyboardEvent) => {\n    if (e.code !== SPACE) { return; }\n\n    const {\n      status,\n    } = this.props;\n\n    if (status === 'idle') {\n      this.startInspecting();\n    } else if (status === 'solving') {\n      this.stopSolving();\n    }\n  };\n\n  handleKeyup = (e: KeyboardEvent) => {\n    if (e.code !== SPACE) { return; }\n\n    const {\n      status,\n    } = this.props;\n\n    /**\n     * user has just released the space button,\n     * we should start the solve timer.\n     */\n    if (status === 'inspecting') {\n      this.startSolving();\n    }\n  }\n\n  render() {\n    const {\n      status,\n      scramble,\n      solve,\n      onClickRefresh\n    } = this.props;\n\n    return (\n      <div className={css(styles.currentSolve)}>\n        <div className={css(styles.scramble)}>\n          {scramble.join(' ')}\n          <span\n            className={css(styles.rescramble)}\n            onClick={onClickRefresh}\n          >\n            &nbsp;<span role=\"img\" aria-label=\"rescramble\">🔄</span>\n          </span>\n        </div>\n        <div>\n          <Timer\n            status={status}\n            solve={solve}\n          />\n          <Message status={status} />\n          <Cube />\n        </div>\n        <div />\n      </div>\n    )\n  }\n};\n\nexport default CurrentSolve;\n","// @flow\nimport Container from './container';\n\nexport default Container;","// @flow\nimport React from 'react';\nimport { inject, observer } from 'mobx-react';\nimport Component from './component';\nimport { Store } from '../../../domains/create-store';\n\nconst CurrentSolve = ({ store }: {\n  store: Store\n}) => {\n  const solve = store.timer.solve;\n  const scramble = store.timer.scramble;\n  const status = store.timer.status;\n  const onClickRefresh = store.timer.requestNewScramble;\n  const startInspecting = store.timer.requestStartInspecting;\n  const startSolving = store.timer.requestStartSolving;\n  const stopSolving = store.timer.requestStopSolving;\n  const tickInspection = store.timer.requestTickInspection;\n  const tickSolve = store.timer.requestTickSolve;\n  return (\n    <Component\n      solve={solve}\n      scramble={scramble}\n      status={status}\n      onClickRefresh={onClickRefresh}\n      startInspecting={startInspecting}\n      startSolving={startSolving}\n      stopSolving={stopSolving}\n      tickInspection={tickInspection}\n      tickSolve={tickSolve}\n    />\n  );\n};\n\nexport default inject('store')(observer(CurrentSolve));\n","// @flow\nimport { StyleSheet } from 'aphrodite';\n\nconst trend = {\n  backgroundColor: 'purple',\n  position: 'absolute',\n  bottom: '0',\n};\n\nconst styles: {\n  trend: StyleSheetProp,\n} = StyleSheet.create({\n  trend,\n});\n\nexport default styles;\n","// @flow\nimport React from 'react';\nimport { List } from 'immutable';\nimport { css } from 'aphrodite';\nimport {\n  XYPlot,\n  XAxis,\n  YAxis,\n  LineSeries\n} from 'react-vis';\nimport 'react-vis/main.css';\nimport Solve from '../../../domains/timer/solve';\nimport styles from './styles';\n\nconst Trend = ({\n  solves\n}: {\n  solves: List<Solve>\n}) => {\n  const data: { x: number, y: number }[] = [];\n  // not using map / filter because flow doesn't play nice with filter.\n  // see https://github.com/facebook/flow/issues/509\n  solves\n    // reversing because solves are presented reverse chronologically\n    .reverse()\n    .forEach((solve: Solve, i: number) => {\n      if (!solve.start || !solve.solveTime) { return; }\n\n      data.push({\n        x: solve.start,\n        y: solve.solveTime / 1000\n      });\n    });\n\n  const maxTime = Math.max(...data.map((time) => time.y));\n  const width = document.body ?\n    document.body.clientWidth * 0.8 :\n    400;\n  const height = 200;\n\n  return (\n    <div className={css(styles.trend)}>\n      <XYPlot\n        width={width}\n        height={height}\n        yDomain={[0, maxTime]}\n        xType=\"ordinal\"\n      >\n        <LineSeries\n          data={data}\n          strokeWidth={1}\n        />\n        <XAxis\n          tickSize={0}\n          tickValues={[]}\n        />\n        <YAxis tickSize={0} />\n      </XYPlot>\n    </div>\n  );\n}\n\nexport default Trend;\n","// @flow\nimport Container from './container';\n\nexport default Container;","// @flow\nimport React from 'react';\nimport { inject, observer } from 'mobx-react';\nimport Component from './component';\nimport { Store } from '../../../domains/create-store';\n\nconst Trend = ({ store }: {\n  store: Store\n}) => {\n  return (\n    <Component\n      solves={store.timer.solves.slice(0, 200)}\n    />\n  );\n};\n\nexport default inject('store')(observer(Trend));\n","// @flow\nimport Component from './component';\n\nexport default Component;","// @flow\nimport React from 'react';\nimport { css } from 'aphrodite';\nimport styles from './styles';\nimport Solves from './solves';\nimport CurrentSolve from './current-solve';\nimport Trend from './trend';\n\nconst Timer = () => (\n  <div className={css(styles.container)}>\n    <div className={css(styles.primary)}>\n      <CurrentSolve />\n      <Trend />\n    </div>\n    <div className={css(styles.secondary)}>\n      <Solves />\n    </div>\n  </div>\n);\n\nexport default Timer;\n","// @flow\nimport React, { Component } from 'react';\nimport type { Route } from '../../../domains/routes';\nimport Routes from '../../../domains/routes';\n\ntype Props = {\n  to: Route,\n  routes: Routes,\n  target?: string,\n  children: React.Element<*>,\n};\n\nfunction isModifiedEvent(event: MouseEvent) {\n  return (\n    !!(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey)\n  );\n}\n\nclass Link extends Component {\n  props: Props;\n\n  // https://github.com/ReactTraining/react-router/blob/master/packages/react-router-dom/modules/Link.js\n  handleClick = (event: MouseEvent) => {\n    const {\n      target,\n      to,\n      routes,\n    } = this.props;\n\n    if (\n      !event.defaultPrevented && // onClick prevented default\n      event.button === 0 && // ignore right clicks\n      !target && // let browser handle \"target=_blank\" etc.\n      !isModifiedEvent(event) // ignore clicks with modifier keys\n    ) {\n      event.preventDefault();\n      routes.changeRoute(to)\n    }\n  }\n\n  render() {\n    const {\n      routes,\n      to,\n      children,\n    } = this.props;\n\n    return (\n      <a\n        onClick={this.handleClick}\n        href={routes.getPath(to)}\n      >\n        {children}\n      </a>\n    )\n  }\n}\n\nexport default Link;\n","import Container from './container';\n\nexport default Container;","// @flow\nimport React from 'react';\nimport { inject, observer } from 'mobx-react';\nimport { Store } from '../../../domains/create-store';\nimport type { Route } from '../../../domains/routes';\nimport Component from './component';\n\ntype Props = {\n  store: Store,\n  to: Route,\n  target?: string,\n  children: React.Element<*>,\n};\n\nconst Link = ({\n  store,\n  to,\n  target,\n  children,\n}: Props) => {\n  const routes = store.routes;\n  return (\n    <Component\n      routes={routes}\n      to={to}\n      target={target}\n      children={children}\n    />\n  );\n};\n\nexport default inject('store')(observer(Link));\n","import React from 'react';\nimport Link from '../_common/link';\n\nconst Tutorial = () => (\n  <div>\n    <h1>Hello Tutorial</h1>\n    <Link to=\"timer\">Timer</Link>\n  </div>\n);\n\nexport default Tutorial;\n","// @flow\nimport React from 'react';\nimport type { Route } from 'domains/routes';\nimport Timer from './timer';\nimport Tutorial from './tutorial';\n\nconst App = ({ route }: {\n  route: ?Route\n}) => {\n  switch (route) {\n    case 'timer':\n      return <Timer />;\n    case 'tutorial':\n      return <Tutorial />;\n    default:\n      return null;\n  }\n}\n\nexport default App;","// @flow\nimport Container from './container';\n\nexport default Container;","// @flow\nimport React from 'react';\nimport { inject, observer } from 'mobx-react';\nimport Component from './component';\nimport { Store } from '../domains/create-store';\n\nconst App = ({ store }: {\n  store: Store\n}) => {\n  const route = store.routes.currentRoute;\n  return (\n    <Component\n      route={route}\n    />\n  );\n}\n\nexport default inject('store')(observer(App));\n","// @flow\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport {\n  useStrict,\n  autorun,\n} from 'mobx';\nimport { Provider } from 'mobx-react';\nimport Database from './database';\nimport createStore from './domains/create-store';\nimport App from './ui';\nimport './index.css'\n\nuseStrict(true);\n\nconst db = new Database();\nconst store = createStore(db);\n\n// keep window path in sync with route\nautorun(() => {\n  const path = store.routes.currentPath;\n  if (window.location.pathname !== path) {\n    window.history.pushState(null, null, path);\n  }\n});\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}